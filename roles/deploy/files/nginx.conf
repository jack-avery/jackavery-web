access_log  /var/log/nginx/access_log;
error_log  /var/log/nginx/error_log;

server {
    listen 80;
    server_name jackavery.ca;
    server_tokens off;

    # For LetsEncrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect everything else to https
    if ($host = jackavery.ca) {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name jackavery.ca;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/jackavery.ca/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/jackavery.ca/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    add_header X-Frame-Options "ALLOW-FROM youtube.com";
    add_header Content-Security-Policy "frame-ancestors youtube.com";

    root /usr/share/nginx/html;

    location = / {
        try_files /index.html =404;
    }

    location / {
        try_files $uri $uri/ $uri.html =404;
    }

    # rocket.rs API on 8000 on same machine as front-end
    location /api/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://127.0.0.1:8000$request_uri;
    }

    location = /bans/ {
        return 301 https://$host/bans/index.php;
    }
    
    # sb++ on 8080 on same machine as front-end
    location ~ ^/bans/(.+)$ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://127.0.0.1:8080/$1;
    }

    error_page 404 /404.html;
}